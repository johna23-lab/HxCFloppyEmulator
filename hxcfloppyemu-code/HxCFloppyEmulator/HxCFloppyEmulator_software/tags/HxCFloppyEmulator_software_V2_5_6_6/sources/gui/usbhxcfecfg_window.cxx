// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "usbhxcfecfg_window.h"
#include "gui_strings.h"

extern void tick_usb(void *v);
void usbhxcfecfg_window::cb_OK_i(Fl_Button* o, void*) {
  ((Fl_Window*)(o->parent()))->hide();
}
void usbhxcfecfg_window::cb_OK(Fl_Button* o, void* v) {
  ((usbhxcfecfg_window*)(o->parent()->user_data()))->cb_OK_i(o,v);
}

usbhxcfecfg_window::usbhxcfecfg_window() {
  { window = new Fl_Double_Window(565, 230, getString(STR_USBSETTINGSWINDOW_0001));
    window->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(4, 7, 411, 63, getString(STR_USBSETTINGSWINDOW_0002));
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { strout_usbhfestatus = new Fl_Output(64, 32, 315, 25, getString(STR_USBSETTINGSWINDOW_0003));
        strout_usbhfestatus->labelsize(12);
      } // Fl_Output* strout_usbhfestatus
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(4, 77, 411, 150, getString(STR_USBSETTINGSWINDOW_0004));
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { strout_maxsettletime = new Fl_Output(104, 124, 107, 20, getString(STR_USBSETTINGSWINDOW_0005));
        strout_maxsettletime->labelsize(12);
        strout_maxsettletime->textsize(12);
      } // Fl_Output* strout_maxsettletime
      { strout_minsettletime = new Fl_Output(104, 146, 107, 20, getString(STR_USBSETTINGSWINDOW_0006));
        strout_minsettletime->labelsize(12);
        strout_minsettletime->textsize(12);
      } // Fl_Output* strout_minsettletime
      { valout_synclost = new Fl_Value_Output(314, 168, 93, 20, getString(STR_USBSETTINGSWINDOW_0007));
        valout_synclost->labelsize(12);
        valout_synclost->textsize(12);
      } // Fl_Value_Output* valout_synclost
      { strout_packetsent = new Fl_Output(314, 146, 93, 20, getString(STR_USBSETTINGSWINDOW_0008));
        strout_packetsent->labelsize(12);
        strout_packetsent->textsize(12);
      } // Fl_Output* strout_packetsent
      { strout_datasent = new Fl_Output(314, 124, 93, 20, getString(STR_USBSETTINGSWINDOW_0009));
        strout_datasent->labelsize(12);
        strout_datasent->textsize(12);
      } // Fl_Output* strout_datasent
      { strout_datathroughput = new Fl_Output(314, 102, 93, 20, getString(STR_USBSETTINGSWINDOW_0010));
        strout_datathroughput->labelsize(12);
        strout_datathroughput->textsize(12);
      } // Fl_Output* strout_datathroughput
      { Fl_Button* o = new Fl_Button(314, 201, 93, 20, getString(STR_USBSETTINGSWINDOW_0011));
        o->callback((Fl_Callback*)resetusbstat_bt, (void*)(this));
      } // Fl_Button* o
      { slider_usbpacket_size = new Fl_Value_Slider(104, 102, 107, 20, getString(STR_USBSETTINGSWINDOW_0012));
        slider_usbpacket_size->type(1);
        slider_usbpacket_size->labelsize(12);
        slider_usbpacket_size->textsize(12);
        slider_usbpacket_size->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
        slider_usbpacket_size->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Value_Slider* slider_usbpacket_size
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(420, 7, 140, 114, getString(STR_USBSETTINGSWINDOW_0013));
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { rbt_ds2 = new Fl_Round_Button(425, 55, 100, 16, getString(STR_USBSETTINGSWINDOW_0014));
        rbt_ds2->type(102);
        rbt_ds2->down_box(FL_ROUND_DOWN_BOX);
        rbt_ds2->labelsize(12);
        rbt_ds2->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Round_Button* rbt_ds2
      { rbt_ds3 = new Fl_Round_Button(425, 70, 100, 16, getString(STR_USBSETTINGSWINDOW_0015));
        rbt_ds3->type(102);
        rbt_ds3->down_box(FL_ROUND_DOWN_BOX);
        rbt_ds3->labelsize(12);
        rbt_ds3->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Round_Button* rbt_ds3
      { chk_twistedcable = new Fl_Check_Button(425, 85, 100, 16, getString(STR_USBSETTINGSWINDOW_0016));
        chk_twistedcable->down_box(FL_DOWN_BOX);
        chk_twistedcable->labelsize(12);
        chk_twistedcable->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Check_Button* chk_twistedcable
      { chk_disabledrive = new Fl_Check_Button(425, 100, 100, 16, getString(STR_USBSETTINGSWINDOW_0017));
        chk_disabledrive->down_box(FL_DOWN_BOX);
        chk_disabledrive->labelsize(12);
        chk_disabledrive->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Check_Button* chk_disabledrive
      { rbt_ds0 = new Fl_Round_Button(425, 25, 100, 16, getString(STR_USBSETTINGSWINDOW_0018));
        rbt_ds0->type(102);
        rbt_ds0->down_box(FL_ROUND_DOWN_BOX);
        rbt_ds0->labelsize(12);
        rbt_ds0->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Round_Button* rbt_ds0
      { rbt_ds1 = new Fl_Round_Button(425, 40, 100, 16, getString(STR_USBSETTINGSWINDOW_0019));
        rbt_ds1->type(102);
        rbt_ds1->down_box(FL_ROUND_DOWN_BOX);
        rbt_ds1->labelsize(12);
        rbt_ds1->callback((Fl_Callback*)usbifcfg_window_datachanged, (void*)(this));
      } // Fl_Round_Button* rbt_ds1
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(420, 118, 140, 79, getString(STR_USBSETTINGSWINDOW_0020));
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { chk_autoifmode = new Fl_Check_Button(425, 162, 100, 16, getString(STR_USBSETTINGSWINDOW_0021));
        chk_autoifmode->down_box(FL_DOWN_BOX);
        chk_autoifmode->labelsize(12);
        chk_autoifmode->callback((Fl_Callback*)ifcfg2_window_datachanged, (void*)(this));
        chk_autoifmode->when(FL_WHEN_CHANGED);
      } // Fl_Check_Button* chk_autoifmode
      { chk_doublestep = new Fl_Check_Button(425, 178, 100, 16, getString(STR_USBSETTINGSWINDOW_0022));
        chk_doublestep->down_box(FL_DOWN_BOX);
        chk_doublestep->labelsize(12);
        chk_doublestep->callback((Fl_Callback*)ifcfg2_window_datachanged, (void*)(this));
        chk_doublestep->when(FL_WHEN_CHANGED);
      } // Fl_Check_Button* chk_doublestep
      { choice_ifmode = new Fl_Choice(426, 138, 130, 20);
        choice_ifmode->down_box(FL_BORDER_BOX);
        choice_ifmode->labelsize(12);
        choice_ifmode->textsize(12);
        choice_ifmode->callback((Fl_Callback*)ifcfg2_window_datachanged, (void*)(this));
      } // Fl_Choice* choice_ifmode
      o->end();
    } // Fl_Group* o
    { Fl_Button* o = new Fl_Button(420, 200, 140, 25, getString(STR_COMMON_OK));
      o->callback((Fl_Callback*)cb_OK);
    } // Fl_Button* o
    window->end();
  } // Fl_Double_Window* window

  Fl::add_timeout(0.50, tick_usb, this);
}
