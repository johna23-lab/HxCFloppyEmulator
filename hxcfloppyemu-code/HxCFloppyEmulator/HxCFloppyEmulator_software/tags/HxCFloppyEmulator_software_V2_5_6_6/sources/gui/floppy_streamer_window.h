// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef floppy_streamer_window_h
#define floppy_streamer_window_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Button.H>
extern void floppy_streamer_clear_bt(Fl_Button*, void*);
#include <FL/Fl_Input.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Light_Button.H>
extern void disk_streamer_window_callback(Fl_Light_Button*, void*);
#include <FL/Fl_Value_Slider.H>
extern void disk_streamer_window_callback(Fl_Value_Slider*, void*);
extern void floppy_streamer_readdisk(Fl_Button*, void*);
extern void floppy_streamer_readtrack(Fl_Button*, void*);
extern void floppy_streamer_spybus(Fl_Button*, void*);
extern void floppy_streamer_stop(Fl_Button*, void*);
extern void floppy_streamer_trackup(Fl_Button*, void*);
extern void floppy_streamer_down(Fl_Button*, void*);
extern void floppy_streamer_movehead(Fl_Button*, void*);
extern void floppy_streamer_recalibrate(Fl_Button*, void*);
extern void floppy_streamer_connect(Fl_Button*, void*);
#include <FL/Fl_Slider.H>
extern void disk_streamer_window_callback(Fl_Slider*, void*);
#include <FL/Fl_Choice.H>
extern void floppy_streamer_mode3(Fl_Light_Button*, void*);
extern void floppy_streamer_eject(Fl_Button*, void*);

class floppy_streamer_window {
public:
  floppy_streamer_window();
  Fl_Window *window;
  Fl_Input *dump_name;
  Fl_Input *comment;
  Fl_Input *index_name;
  Fl_Output *x_pos;
  Fl_Output *y_pos;
  Fl_Output *global_status;
  Fl_Text_Display *object_txt;
  Fl_Light_Button *iso_mfm_bt;
  Fl_Light_Button *iso_fm_bt;
  Fl_Light_Button *amiga_mfm_bt;
  Fl_Light_Button *apple2_bt;
  Fl_Light_Button *eemu_bt;
  Fl_Light_Button *tycom_bt;
  Fl_Light_Button *membrain_bt;
  Fl_Light_Button *arburg_bt;
  Fl_Light_Button *aed6200p_bt;
  Fl_Light_Button *northstar_bt;
  Fl_Light_Button *heathkit_bt;
  Fl_Light_Button *decrx02_bt;
  Fl_Value_Slider *track_number_slide;
  Fl_Value_Slider *side_number_slide;
  Fl_Group *floppy_map_disp;
  Fl_Input *min_track;
  Fl_Input *max_track;
  Fl_Input *dump_lenght;
  Fl_Input *index_delay;
  Fl_Light_Button *Side_0;
  Fl_Light_Button *Side_1;
  Fl_Light_Button *double_step;
  Fl_Light_Button *ignore_index;
  Fl_Light_Button *high_res;
  Fl_Light_Button *high_contrast;
  Fl_Light_Button *fat_dots;
  Fl_Input *server_address;
  Fl_Value_Slider *x_offset;
  Fl_Slider *x_time;
  Fl_Value_Slider *y_time;
  Fl_Choice *drive_choice;
  Fl_Light_Button *mode3;
};
#endif
