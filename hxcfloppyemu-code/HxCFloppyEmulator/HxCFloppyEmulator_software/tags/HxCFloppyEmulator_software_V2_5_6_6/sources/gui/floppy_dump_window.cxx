// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "floppy_dump_window.h"

floppy_dump_window::floppy_dump_window() {
  { window = new Fl_Double_Window(975, 430, "Floppy disk dump");
    window->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(1, 1, 289, 55, "Drive selection");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { sel_drive_a = new Fl_Round_Button(11, 22, 90, 23, "Drive \"A:\"");
        sel_drive_a->type(102);
        sel_drive_a->down_box(FL_ROUND_DOWN_BOX);
      } // Fl_Round_Button* sel_drive_a
      { sel_drive_b = new Fl_Round_Button(143, 22, 90, 24, "Drive \"B:\"");
        sel_drive_b->type(102);
        sel_drive_b->down_box(FL_ROUND_DOWN_BOX);
      } // Fl_Round_Button* sel_drive_b
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1, 335, 289, 90, "Status");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { global_status = new Fl_Output(18, 357, 255, 25);
        global_status->labelsize(12);
        global_status->textsize(12);
      } // Fl_Output* global_status
      { current_status = new Fl_Output(18, 387, 255, 25);
        current_status->labelsize(12);
        current_status->textsize(12);
      } // Fl_Output* current_status
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(289, 1, 681, 424, "Floppy Map");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { layout_area = new Fl_Box(295, 23, 670, 397, "Disk layout");
      } // Fl_Box* layout_area
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1, 55, 289, 105, "Tracks selection");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { start_track = new Fl_Value_Input(76, 80, 50, 20, "Start track");
        start_track->labelsize(12);
        start_track->textsize(12);
      } // Fl_Value_Input* start_track
      { end_track = new Fl_Value_Input(197, 81, 50, 19, "End track");
        end_track->labelsize(12);
        end_track->textsize(12);
      } // Fl_Value_Input* end_track
      { side_0 = new Fl_Check_Button(6, 106, 70, 16, "Side 0");
        side_0->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* side_0
      { side_1 = new Fl_Check_Button(132, 106, 70, 16, "Side 1");
        side_1->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* side_1
      { double_step = new Fl_Check_Button(6, 130, 104, 16, "Double step");
        double_step->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* double_step
      { Fl_Group* o = new Fl_Group(26, 80, 15, 15);
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1, 159, 289, 90, "Densities selection");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { FM125 = new Fl_Check_Button(3, 180, 127, 16, "FM/SD 125Kb/s");
        FM125->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* FM125
      { FM150 = new Fl_Check_Button(3, 196, 127, 16, "FM/SD 150Kb/s");
        FM150->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* FM150
      { FM250 = new Fl_Check_Button(3, 211, 127, 16, "FM/SD 250Kb/s");
        FM250->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* FM250
      { MFM250 = new Fl_Check_Button(141, 180, 139, 16, "MFM/DD 250Kb/s");
        MFM250->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* MFM250
      { MFM500 = new Fl_Check_Button(141, 209, 139, 16, "MFM/HD 500Kb/s");
        MFM500->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* MFM500
      { MFM1000 = new Fl_Check_Button(141, 224, 124, 16, "MFM/ED 1Mb/s");
        MFM1000->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* MFM1000
      { FM500 = new Fl_Check_Button(3, 225, 127, 16, "FM/SD 500Kb/s");
        FM500->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* FM500
      { MFM300 = new Fl_Check_Button(141, 194, 139, 16, "MFM/DD 300Kb/s");
        MFM300->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* MFM300
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1, 248, 289, 90, "Operations");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { Fl_Button* o = new Fl_Button(194, 303, 80, 21, "Stop !");
        o->callback((Fl_Callback*)floppy_dump_stop, (void*)(this));
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(15, 303, 80, 21, "Read Disk");
        o->callback((Fl_Callback*)floppy_dump_window_bt_read, (void*)(this));
      } // Fl_Button* o
      { number_of_retry = new Fl_Value_Input(51, 276, 55, 18, "Retry");
        number_of_retry->labelsize(12);
        number_of_retry->textsize(12);
      } // Fl_Value_Input* number_of_retry
      o->end();
    } // Fl_Group* o
    window->end();
  } // Fl_Double_Window* window
}
